"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[952],{6204:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>l});var s=t(7624),r=t(4552);const i={},o="GenAI Cards Flow",d={id:"Let's Start/Flows",title:"GenAI Cards Flow",description:"Let's define the model of genAI cards flow using the formal representation provided:",source:"@site/docs/01-Let's Start/100-Flows.md",sourceDirName:"01-Let's Start",slug:"/Let's Start/Flows",permalink:"/PE4GenAI/Let's Start/Flows",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:100,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Categories",permalink:"/PE4GenAI/Let's Start/Categories"},next:{title:"Installation",permalink:"/PE4GenAI/installation"}},a={},l=[];function c(e){const n={h1:"h1",img:"img",li:"li",ol:"ol",p:"p",ul:"ul",...(0,r.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"genai-cards-flow",children:"GenAI Cards Flow"}),"\n",(0,s.jsx)(n.p,{children:"Let's define the model of genAI cards flow using the formal representation provided:"}),"\n",(0,s.jsx)(n.p,{children:"Let ( G = (V, E) ) be the directed graph representing the flow model, where:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"( V ) is the set of nodes representing each card in the flow."}),"\n",(0,s.jsx)(n.li,{children:"( E ) is the set of directed edges representing the transitions between cards."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Each node ( v_i ) in ( V ) represents a card, and each edge ( (v_i, v_j) ) in ( E ) represents the transition from card ( v_i ) to card ( v_j )."}),"\n",(0,s.jsx)(n.p,{children:"Now, let's define the nodes (cards) and edges (transitions) based on the model of generative AI tasks:"}),"\n",(0,s.jsx)(n.p,{children:"Nodes (Cards):"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Generate Content (Node 1)"}),"\n",(0,s.jsx)(n.li,{children:"Revise Content (Node 2)"}),"\n",(0,s.jsx)(n.li,{children:"Translate Content (Node 3)"}),"\n",(0,s.jsx)(n.li,{children:"Correct Grammatical Errors (Node 4)"}),"\n",(0,s.jsx)(n.li,{children:"Enhance Coherence (Node 5)"}),"\n",(0,s.jsx)(n.li,{children:"Improve Relevance (Node 6)"}),"\n",(0,s.jsx)(n.li,{children:"Adjust Tone (Node 7)"}),"\n",(0,s.jsx)(n.li,{children:"Gather Feedback (Node 8)"}),"\n",(0,s.jsx)(n.li,{children:"Implement Feedback (Node 9)"}),"\n",(0,s.jsx)(n.li,{children:"Iterate (Node 10)"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Alt text",src:t(1716).c+"",width:"1146",height:"926"})}),"\n",(0,s.jsx)(n.p,{children:"The transitions between cards guide the flow of the generative content creation process, allowing for iterative refinement based on feedback and the completion of various tasks."})]})}function h(e={}){const{wrapper:n}={...(0,r.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},1716:(e,n,t)=>{t.d(n,{c:()=>s});const s=t.p+"assets/images/flow-f401782cc1a9ba4c3a26b84f97f30502.png"},4552:(e,n,t)=>{t.d(n,{I:()=>d,M:()=>o});var s=t(1504);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);