"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[668],{1592:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var r=t(7624),o=t(4552);const s={},i="GenAI Cards Flow",a={id:"Let's Start/Flows",title:"GenAI Cards Flow",description:"Let's define the model of genAI cards flow using the formal representation provided:",source:"@site/docs/01-Let's Start/9-Flows.md",sourceDirName:"01-Let's Start",slug:"/Let's Start/Flows",permalink:"/PE4GenAI/Let's Start/Flows",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Categories",permalink:"/PE4GenAI/Let's Start/Categories"},next:{title:"Introduction to Generative AI and Large Language Models",permalink:"/PE4GenAI/Introduction/intro"}},d={},c=[];function l(e){const n={code:"code",h1:"h1",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.M)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"genai-cards-flow",children:"GenAI Cards Flow"}),"\n",(0,r.jsx)(n.p,{children:"Let's define the model of genAI cards flow using the formal representation provided:"}),"\n",(0,r.jsx)(n.p,{children:"Let ( G = (V, E) ) be the directed graph representing the flow model, where:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"( V ) is the set of nodes representing each card in the flow."}),"\n",(0,r.jsx)(n.li,{children:"( E ) is the set of directed edges representing the transitions between cards."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Each node ( v_i ) in ( V ) represents a card, and each edge ( (v_i, v_j) ) in ( E ) represents the transition from card ( v_i ) to card ( v_j )."}),"\n",(0,r.jsx)(n.p,{children:"Now, let's define the nodes (cards) and edges (transitions) based on the model of generative AI tasks:"}),"\n",(0,r.jsx)(n.p,{children:"Nodes (Cards):"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Generate Content (Node 1)"}),"\n",(0,r.jsx)(n.li,{children:"Revise Content (Node 2)"}),"\n",(0,r.jsx)(n.li,{children:"Translate Content (Node 3)"}),"\n",(0,r.jsx)(n.li,{children:"Correct Grammatical Errors (Node 4)"}),"\n",(0,r.jsx)(n.li,{children:"Enhance Coherence (Node 5)"}),"\n",(0,r.jsx)(n.li,{children:"Improve Relevance (Node 6)"}),"\n",(0,r.jsx)(n.li,{children:"Adjust Tone (Node 7)"}),"\n",(0,r.jsx)(n.li,{children:"Gather Feedback (Node 8)"}),"\n",(0,r.jsx)(n.li,{children:"Implement Feedback (Node 9)"}),"\n",(0,r.jsx)(n.li,{children:"Iterate (Node 10)"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-mermaid",children:"graph TD;\n    v1[Generate Content] --\x3e v2[Revise Content];\n    v2 --\x3e|choice| v3[Translate Content];\n    v2 --\x3e|choice| v4[Correct Grammatical Errors];\n    v2 --\x3e|choice| v5[Enhance Coherence];\n    v3 --\x3e v8[Gather Feedback];\n    v4 --\x3e v8;\n    v5 --\x3e v8;\n    v8 --\x3e v9[Implement Feedback];\n    v9 --\x3e v10[Iterate];\n    v10 --\x3e|choice| v1;\n    v10 --\x3e|choice| v8;\n"})}),"\n",(0,r.jsx)(n.p,{children:"The transitions between cards guide the flow of the generative content creation process, allowing for iterative refinement based on feedback and the completion of various tasks."})]})}function h(e={}){const{wrapper:n}={...(0,o.M)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},4552:(e,n,t)=>{t.d(n,{I:()=>a,M:()=>i});var r=t(1504);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);